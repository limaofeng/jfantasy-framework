"""
授权信息
""" #directive @auth(rules: [AuthRule!]!) on FIELD_DEFINITION
input AuthRule {
  """
  授权策略
  """
  allow: AuthStrategy!
  """
  授权提供者
  """
  provider: AuthProvider
  """
  所有者字段的名称（默认为 "owner"）
  """
  ownerField: String
  """
  标识声明字段的名称（默认为 "username"）
  """
  identityClaim: String
  """
  组声明字段的名称（默认为 "cognito:groups"）
  """
  groupClaim: String
  """
  静态组授权时要求的组列表
  """
  groups: [String]
  """
  动态组授权时组字段的名称（默认为 "groups"）
  """
  groupsField: String
  """
  操作列表（ModelOperation 枚举类型的数组），用于更精细地控制授权。
  """
  operations: [ModelOperation]
}

"""
授权策略的枚举类型
"""
enum AuthStrategy {
  """
  授权所有者
  """
  owner
  """
  授权指定组的用户
  """
  groups
  """
  允许所有经过身份验证的用户
  """
  private
  """
  允许所有访客用户（未经身份验证）
  """
  public
}
"""
授权提供者的枚举类型
"""
enum AuthProvider {
  apiKey
  iam
  oidc
  userPools
}
"""
模型操作的枚举类型
"""
enum ModelOperation {
  create
  update
  delete
  read
}

type Query {
  # 用户列表
  demoUsers(
    filter: DemoUserFilter
    page: Int = 1
    pageSize: Int = 15
    orderBy: OrderBy = "unsorted"
  ): DemoUserConnection
}

type Mutation {
  createTenant(name: String): Boolean
  createUser(input: DemoUserCreateInput!): DemoUser
}

type StockPriceUpdate {
  stockCode: String
  dateTime: String
  stockPrice: BigDecimal
  stockPriceChange: BigDecimal
}

type Subscription {
  stockQuotes(stockCodes: [String!]!): StockPriceUpdate
  userChange: DemoUser
}

input DemoUserCreateInput {
  #登录名
  username: String
  #登录密码
  password: String
}

input DemoUserFilter {
  username_contains: String
}

type DemoUserConnection implements Connection {
  """
  每页显示条数
  """
  pageSize: Int! @deprecated
  """
  总数据条数
  """
  totalCount: Int! @deprecated
  """
  总页数
  """
  totalPage: Int! @deprecated
  """
  当前页
  """
  currentPage: Int! @deprecated
  edges: [DemoUserEdge!]!
  pageInfo: PageInfo!
}
type DemoUserEdge implements Edge {
  cursor: String!
  node: DemoUser
}

type DemoUser {
  id: ID
  #登录名
  username: String
  #登录密码
  password: String
  # 创建人
  createdBy: String
  # 修改人
  updatedBy: String
  # 创建时间
  createdAt: Date
  # 修改时间
  updatedAt: Date
}
