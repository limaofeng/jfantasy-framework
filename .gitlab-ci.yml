stages:
- build
- test
- deploy

build:
  stage: build
  image: java:8
  cache:
    paths:
    - .gradle/caches/
    - .gradle/wrapper/
  before_script:
  - export GRADLE_USER_HOME=$PWD/.gradle
  script:
  - ./gradlew clean classes -x test

sonarqube:
  stage: test
  image: limaofeng/gradle-alpine:mysql
  services:
  - mysql:latest
  variables:
    MYSQL_ROOT_PASSWORD: 123456
    DATABASE_HOST: mysql
    DATABASE_USERNAME: root
    DATABASE_PASSWORD: 123456
  before_script:
  - export GRADLE_USER_HOME=$PWD/.gradle
  script:
  - mysql -h mysql -u root -p123456 < "core/database/tables.sql"
  - ./gradlew sonarqube -Dsonar.host.url=$SONAR_HOST \
    -Dsonar.login=$SONAR_TOKEN -Dsonar.scm.provider=git \
    -Dsonar.analysis.mode=publish -Dsonar.issuesReport.console.enable=true \
    -Dsonar.verbose=true
  cache:
    paths:
    - .gradle/caches/
    - .gradle/wrapper/

deploy:
  stage: deploy
  image: docker.artifactory.zbsg.com.cn/java:8
  cache:
    paths:
    - .gradle/caches/
    - .gradle/wrapper/
  before_script:
  - export GRADLE_USER_HOME=$PWD/.gradle
  script:
  - ./gradlew artifactoryPublish
  only:
  - tags