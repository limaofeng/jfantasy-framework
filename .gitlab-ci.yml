stages:
  - build
  - test
  - deploy

build:
  stage: build
  image: docker.artifactory.zbsg.com.cn/frekele/gradle
  cache:
    paths:
      - .gradle/caches/
      - .gradle/wrapper/
  before_script:
    - sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories
    - apk update && apk add curl
    - export GRADLE_USER_HOME=$PWD/.gradle
    # Install JFrog CLI
    - curl -fL https://getcli.jfrog.io | sh
    - chmod +x jfrog
    - ls
    # Configure Artifactory instance with JFrog CLI
    - ./jfrog rt config --url=$ARTIFACTORY_URL --user=$ARTIFACTORY_USER --password=$ARTIFACTORY_PASS
    - ./jfrog rt c show
    # Replace the repository name in the configuration.yml to the correct one.
    - sed -i 's,GRADLE_REPO_KEY,'"$GRADLE_REPO_KEY"',g' configuration.yaml
  script:
    # - ./gradlew clean classes -x test
    # Run the Gradle command
    - ./jfrog rt gradlew "clean classes -x test" configuration.yaml --build-name=gitlabci-gradle-artifactory --build-number=$CI_JOB_ID
    # Collect the environment variables
    - ./jfrog rt bce gitlabci-gradle-artifactory $CI_JOB_ID
    # Pass the build information to Artifactory
    - ./jfrog rt bp gitlabci-gradle-artifactory $CI_JOB_ID

#sonar:
#  stage: test
#  image: limaofeng/gradle-alpine:mysql
#  services:
#    - mysql:latest
#  variables:
#    MYSQL_ROOT_PASSWORD: 123456
#    DATABASE_HOST: mysql
#    DATABASE_USERNAME: root
#    DATABASE_PASSWORD: 123456
#  before_script:
#    - export GRADLE_USER_HOME=/cache/.gradle
#  script:
#    - mysql -h mysql -u root -p123456 < "core/database/tables.sql"
#    - ./gradlew sonarqube -Dsonar.host.url=$SONAR_HOST -Dsonar.login=$SONAR_TOKEN -Dsonar.scm.provider=git -Dsonar.analysis.mode=publish -Dsonar.issuesReport.console.enable=true -Dsonar.verbose=true
#  cache:
#    paths:
#      - $GRADLE_USER_HOME/caches/
#      - $GRADLE_USER_HOME/wrapper/
#      - $GRADLE_USER_HOME/build-cache/

deploy:
  stage: deploy
  image: docker.artifactory.zbsg.com.cn/limaofeng/gradle-alpine
  cache:
    paths:
    - $GRADLE_USER_HOME/caches/
    - $GRADLE_USER_HOME/wrapper/
    - $GRADLE_USER_HOME/build-cache/
  variables:
    GRADLE_USER_HOME: /cache/.gradle
  only:
    - tags
  script:
    - gradle clean testClasses upload -x test