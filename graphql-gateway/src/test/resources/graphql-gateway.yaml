schema:
  typeDefs: "./schema.graphql"
  resolvers:
    Query:
      getUser: "./getUser.js"
      getOrder: "./getOrder.js"
    Mutation:
      updateUser: "./updateUser.py"

scalars:
  - name: "OrderBy"
    description: "Order by Scalar type"
    provider: "spring"
    resolver: "orderByScalar"
  - name: "File"
    provider: "spring"
    resolver: "orderByScalar"
  - name: "Number"
    provider: "spring"
    resolver: "orderByScalar"
  - name: "Upload"
    provider: "spring"
    resolver: "orderByScalar"
  - name: "Date"
    description: "Date custom scalar type"
  - name: "Json"
    description: "Json custom scalar type"

services:
  - name: asany
    url: "https://api.asany.cn/graphql"
    typeDefs: "./asany.graphql"
    introspection:
      enabled: false
      frequency: 30m
#    excludeFields:
#      - "Application.layoutRoute"
#  - name: user
#    url: "https://user.api.asany.cn/graphql"
#    typeDefs: "./user.graphql"
#    introspection:
#      enabled: false
#      frequency: 30m

override:
  - type: "Query"
    fields:
      - name: "apps"
        mapping: "applications"
#        dataLoader: true
        arguments:
          - name: "filter"
            mapping: "where"
#      - name: "testApp"
#        dataFetcher: "single"
#        type: "Application"
#        arguments:
#          - name: "input"
#            description: "test app input"
#            type: "EnhancedUserInput!"
  - type: "Application"
    fields:
      - name: "appName"
        mapping: "name"
        dataFetcher: "appName"
#      - name: "createdBy"
#        type: "User"
#        resolver:
#          query: "user@Query.user(id: $createdBy)"

dataFetchers:
  - name: "appName"
    class: "net.asany.jfantasy.graphql.gateway.AppNameDataFetcher"

rewriteFields:
  - field: "User.addUser"
    definition: "addUser(input: EnhancedUserInput): EnhancedUser"
    delegate:
      name: getUser
      args:
        id: "$.id"

delegates:
  - name: getUser
    resolver: "./getUser.js"

rewriteRules:
  - match:
      queryName: "getUser"
    rewrite:
      toService: "userService"
      modifyQuery: "replaceUserIdWithUsername"

  - match:
      queryName: "getOrder"
    rewrite:
      toService: "orderService"
      modifyQuery: "addOrderDetails"

forwardingRules:
  - match:
      queryName: "getUser"
    forwardTo: "userService"

security:
  authentication:
    enabled: true
    provider: jwt
    secretKey: "your_secret_key"

  authorization:
    enabled: true
    policy: "./auth-policy.yaml"

logging:
  level: INFO
  format: json

caching:
  enabled: true
  ttl: 300

monitoring:
  enabled: true
  endpoint: "/metrics"