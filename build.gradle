buildscript {
    repositories {
        maven { url "https://artifactory.zbsg.com.cn/artifactory/libs-release" }
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.0.RELEASE'
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.+'
    }
}

plugins {
    id "org.sonarqube" version "2.5"
}

apply from: "$rootDir/gradle/dependencies.gradle"

configure(allprojects) {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
}

allprojects {
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'idea'

    group = 'org.jfantasy'
    version = System.getenv()['CI_BUILD_TAG']
    status = 'integration'

    repositories {
        maven { url "https://artifactory.zbsg.com.cn/artifactory/libs-release" }
    }

    configurations {
        apply plugin: 'java'
        apply plugin: 'idea'
        apply plugin: "jacoco"
        apply plugin: 'io.spring.dependency-management'

    }
}

subprojects {
    apply plugin: 'maven'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    sourceSets {
        main {
            java.srcDirs = ['JavaSource']
            resources.srcDirs = ["resources"]
        }
        test {
            java.srcDirs = ['test/src']
            resources.srcDirs = ["test/config"]
        }
    }

    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    compileJava.dependsOn(processResources)

    manifest {
        attributes 'provider': 'gradle'
    }

    dependencyManagement {
        imports {
            mavenBom 'io.spring.platform:platform-bom:Cairo-SR7'
        }
    }

    dependencies {
        optional "org.springframework.boot:spring-boot-configuration-processor"
    }

    test {
        ignoreFailures = true

        jacoco {
            append = false
            destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
            classDumpDir = file("$buildDir/jacoco/classpathdumps")
        }

    }

    sonarqube {
        properties {
            property "sonar.sourceEncoding", "UTF-8"
            property "sonar.links.ci", "http://gitlab.zbsg.com.cn/ci"
            property "sonar.links.issue", "http://gitlab.zbsg.com.cn/apis/framework/issues"
            property "sonar.links.scm", "http://gitlab.zbsg.com.cn/apis/framework.git"
        }
    }

    configurations {
        published
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    artifactoryPublish {
        dependsOn sourceJar
    }

    artifacts {
        published sourceJar
    }

}

artifactory {
    contextUrl = System.getenv()['ARTIFACTORY_URL']
    publish {
        repository {
            repoKey = System.getenv()['MAVEN_REPO_KEY']
            username = System.getenv()['ARTIFACTORY_USER']
            password = System.getenv()['ARTIFACTORY_PASS']
        }
        defaults {
            publishConfigs('archives', 'published')
            publishPom = true
            publishIvy = false
        }
    }
    clientConfig.setIncludeEnvVars(true)
    clientConfig.setEnvVarsExcludePatterns('*password*,*secret*')
    clientConfig.info.setBuildNumber(System.getenv()['CI_JOB_ID'])
}