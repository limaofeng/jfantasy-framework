buildscript {
    repositories {
        maven { url "https://maven.thuni-h.com/repository/maven-public" }
        mavenCentral()
        mavenLocal()
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
}

apply from: "$rootDir/gradle/dependencies.gradle"

allprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'idea'

    group = 'org.jfantasy'
    version = (System.getenv()['CI_BUILD_TAG'] ? System.getenv()['CI_BUILD_TAG'] : "").replaceAll(/^v/, "")
    status = 'integration'

    repositories {
        maven { url "https://maven.thuni-h.com/repository/maven-public" }
    }

    configurations {
        apply plugin: 'java'
        apply plugin: 'idea'
        apply plugin: 'io.spring.dependency-management'

    }

    idea {
        module {
            outputDir file("$buildDir/classes/java/main")
            testOutputDir file("$buildDir/classes/java/test")
            inheritOutputDirs = false
        }
    }

    publishing {
        repositories {
            maven {
                credentials {
                    username System.getenv()['MAVEN_USER']
                    password System.getenv()['MAVEN_PASS']
                }
                url "https://maven.thuni-h.com/repository/" + System.getenv()['MAVEN_REPO_KEY']
            }
        }
    
        publications {
            maven(MavenPublication) {
                from components.java
                groupId project.group
                artifactId project.name
                version project.version
            }
        }
    }

}

subprojects {
    apply plugin: 'maven'
    apply plugin: "jacoco"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    compileJava.dependsOn(processResources)

    manifest {
        attributes 'provider': 'gradle'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${LIB_SPRING_BOOT_VER}"
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled true
            html.enabled false
            xml.destination file("${buildDir}/reports/Coverage.xml")
        }
    }

    test {
        useJUnitPlatform()

        ignoreFailures = true

        jacoco {
            destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
            classDumpDir = file("$buildDir/jacoco/classpathdumps")
        }
    }

    configurations {
        published
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        archiveClassifier = 'sources'
    }

    task copyDependencies(type: Sync) {
        from configurations.compileClasspath
        from configurations.compileOnly
        into 'build/dependencies'
    }

    publishing {
        publications {
            maven(MavenPublication) {
                artifact sourceJar
            }
        }
    }

}
