buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
}

apply from: "$rootDir/gradle/dependencies.gradle"

allprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'idea'

    group = 'org.jfantasy'
    version = (System.getenv()['CI_BUILD_TAG'] ? System.getenv()['CI_BUILD_TAG'] : "").replaceAll(/^v/, "")
    status = 'integration'

    repositories {
        maven { url "https://jcenter.bintray.com" }
    }

    configurations {
        apply plugin: 'java'
        apply plugin: 'idea'
        apply plugin: 'io.spring.dependency-management'

    }

    idea {
        module {
            outputDir file("$buildDir/classes/java/main")
            testOutputDir file("$buildDir/classes/java/test")
            inheritOutputDirs = false
        }
    }

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/limaofeng/jfantasy-framework")
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                    password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
                }
            }
        }

        publications {
            maven(MavenPublication) {
                groupId project.group
                artifactId project.name
                version project.version

                from components.java

                pom {
                    name = 'JFantasy'
                    description = 'SpringBoot + JPA + GraphQL'
                    url = 'https://www.asany.cn/jfantasy'
                    licenses {
                        license {
                            name = 'The MIT License'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'limaofeng'
                            name = '李茂峰'
                            email = 'limaofeng@msn.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://git@github.com:limaofeng/jfantasy.git'
                        developerConnection = 'scm:git:ssh://git@github.com:limaofeng/jfantasy.git'
                        url = 'https://github.com/limaofeng/jfantasy'
                    }
                }
            }
        }
    }
}

subprojects {
    apply plugin: "jacoco"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    compileJava.dependsOn(processResources)

    manifest {
        attributes 'provider': 'gradle'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${LIB_SPRING_BOOT_VER}"
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled true
            html.enabled false
            xml.destination file("${buildDir}/reports/Coverage.xml")
        }
    }

    test {
        useJUnitPlatform()

        ignoreFailures = true

        jacoco {
            destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
            classDumpDir = file("$buildDir/jacoco/classpathdumps")
        }
    }

    configurations {
        published
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        archiveClassifier = 'sources'
    }

    task copyDependencies(type: Sync) {
        from configurations.compileClasspath
        from configurations.testCompileClasspath
        into 'build/dependencies'
    }

    publishing {
        publications {
            maven(MavenPublication) {
                artifact sourceJar
            }
        }
    }

}
